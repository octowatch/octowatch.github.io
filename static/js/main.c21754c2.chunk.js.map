{"version":3,"sources":["images/octowatch_logo.svg","components/ow_header.tsx","components/ow_github_list_cell.tsx","api/octowatch-api.ts","state/octowatch-state-store.ts","components/ow_github_list.tsx","components/ow_main_container.tsx","components/ow_big_title.tsx","components/ow_animated_number.tsx","components/ow_small_title.tsx","components/ow_graph.tsx","components/ow_divider.tsx","components/ow_log.tsx","images/event_closed_pr.svg","images/event_merged_pr.svg","images/event_created_pr.svg","images/event_commented.svg","images/exclamation.svg","images/event_general.svg","pages/main_dashboard.tsx","components/ow_repo_header.tsx","components/ow_pie_graph.tsx","components/ow_repository_health_cell.tsx","images/repository_health_completed.svg","images/repository_health_recommended.svg","images/repository_health_required.svg","components/ow_repository_health.tsx","pages/repo_dashboard.tsx","pages/dashboard.tsx","reportWebVitals.ts","index.tsx"],"names":["Container","styled","header","Logo","img","TextContainer","div","Title","p","ServerStatus","ServerStatusNormal","span","OWHeader","title","to","src","LogoSvg","RepositoryLogo","RepositoryInformationContainer","RepositoryTitle","RepositoryDescription","publicProfile","repoName","split","OWGithubListCell","time","recent","btoa","unescape","encodeURIComponent","dayjs","add","fromNow","useOctowatchApi","makeUseAxios","axios","create","baseURL","timeout","serverState","atom","key","default","status","buildName","dashboardState","commits","times","counts","issues","prs","recents","repoListState","repoDashboardState","distributions","community","health_percentage","description","documentation","code_of_conduct","contributing","issue_template","pull_request_template","license","readme","OWGithubList","data","loading","refetch","useRecoilState","repoListStatus","setRepoListStatus","useEffect","setInterval","map","repo","repository","Body","Sidebar","OWMainContainer","body","sidebar","Label","OWBigTitle","label","NumberValue","props","isPercent","OWAnimatedNumber","value","useCountUp","start","end","delay","duration","countUp","update","String","replace","OWSmallTitle","InformationContainer","ChartContainer","OWGraph","color","xAxisValue","yAxisCategory","options","dataLabels","enabled","chart","toolbar","show","stroke","curve","colors","xaxis","type","categories","yaxis","legend","grid","tooltip","x","format","series","name","height","Divider","OWDivider","eventIconTypes","closedPr","mergedPr","openedPr","commented","openedIssue","unknown","Icon","Description","titleTemplates","ping","branch","branchName","delete","issue","opened","userName","comment","issueNumber","closed","pr","merged","review","reviewerName","commit","push","commitCount","committer","descriptionTemplates","createdAt","issueTitle","OWLog","event_entity","event_type","payload","created_at","useMemo","entityTemplates","template","branch_name","replaceAll","user","login","number","length","pusher","iconTypesSrc","TwoRowContainer","TwoContainer","MainDashboard","dashboardStatus","setDashboardStatus","style","marginBottom","index","RepoIcon","RepoName","OWRepoHeader","atob","OWPieGraph","shortTitle","values","labels","plotOptions","pie","donut","total","width","iconTypes","complete","recommend","required","Text","getSuffixText","OWRepositoryHealthCell","isCompleted","InnerContainer","disabled","ListContainer","OWRepositoryHealth","isUnknown","titleLabel","graphValues","completedCount","Object","filter","c","misCompletedCount","console","log","zIndex","position","left","top","TitleContainer","ScoreContainer","ScoreDimenText","RowContainer","ThreeContainer","RepoDashboard","useParams","score","keys","undefined","marginTop","Dashboard","error","serverStatus","setServerState","build_name","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","extend","utc","timezone","relativeTime","locale","tz","setDefault","ReactDOM","render","StrictMode","forceRefresh","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c21754c2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/octowatch_logo.4ac270fd.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport LogoSvg from 'images/octowatch_logo.svg';\nimport { NavLink } from 'react-router-dom';\n\nconst Container = styled.header`\n  height: 170px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0 60px;\n`;\n\nconst Logo = styled.img`\n  width: 72px;\n  height: 72px;\n  pointer-events: none;\n`;\n\nconst TextContainer = styled.div`\n  margin-left: 20px;\n`;\n\nconst Title = styled.p`\n  font-size: 24px;\n  margin: 0;\n`;\n\nconst ServerStatus = styled.p`\n  font-size: 15px;\n  font-weight: 100;\n  margin: 4px 0 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst ServerStatusNormal = styled.span`\n  display: inline-block;\n  width: 13px;\n  height: 13px;\n  background: #8ABB89;\n  border-radius: 100px;\n  margin-right: 7px !important;\n`;\n\nconst OWHeader: React.FC<{ title: string }> = ({title}) => {\n  return <>\n    <NavLink to=\"/\">\n      <Container>\n        <Logo src={LogoSvg}/>\n        <TextContainer>\n          <Title>OctoWatch</Title>\n          <ServerStatus>\n            <ServerStatusNormal />\n             {title}</ServerStatus>\n        </TextContainer>\n      </Container>\n    </NavLink>\n  </>;\n};\n\nexport default OWHeader;\n","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport styled from 'styled-components';\nimport dayjs from 'dayjs';\n\nconst Container = styled.div`\n  cursor: pointer;\n  background: #F0EFEF;\n  padding: 14px 21px;\n  border-radius: 15px;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-bottom: 10px;\n\n  transition: 0.3s all;\n\n  &:hover {\n    background: #E7E7E7;\n  }\n`;\n\nconst RepositoryLogo = styled.img`\n  width: 32px;\n  height: 32px;\n  border: none;\n`;\n\nconst RepositoryInformationContainer = styled.div`\n  margin-left: 18px;\n`;\n\nconst RepositoryTitle = styled.p`\n  font-family: 'JetBrains Mono', monospace;\n  font-size: 18px;\n  margin: 2px 0 0;\n  max-width: 290px !important;\n  min-width: 290px !important;\n  text-overflow: ellipsis;\n  word-break: break-word;\n`;\n\nconst RepositoryDescription = styled.p`\n  font-size: 15px;\n  max-width: 480px;\n  opacity: 0.6;\n  margin: 6px 0 0;\n`;\n\nfunction timeFormat(time: string): string {\n  return `${dayjs(time).add(9, 'hours').fromNow()}에 업데이트 됨`;\n}\n\nfunction publicProfile(repoName: string): string {\n  return `https://avatars.githubusercontent.com/${repoName.split('/')[0]}`;\n}\n\nconst OWGithubListCell: React.FC<{\n  repoName: string,\n  recent: string,\n}> = ({\n        repoName,\n        recent,\n      }) => {\n  return <>\n    <NavLink to={`/detail/${btoa(unescape(encodeURIComponent(repoName)))}`}>\n      <Container>\n        <RepositoryLogo src={publicProfile(repoName)} />\n        <RepositoryInformationContainer>\n          <RepositoryTitle>{repoName}</RepositoryTitle>\n          <RepositoryDescription>{timeFormat(recent)}</RepositoryDescription>\n        </RepositoryInformationContainer>\n      </Container>\n    </NavLink>\n  </>;\n};\n\nexport default OWGithubListCell;","import axios from 'axios';\nimport {makeUseAxios} from 'axios-hooks';\n\nconst useOctowatchApi = makeUseAxios({\n  axios: axios.create({\n    baseURL: 'https://api.octowatch.ml',\n    timeout: 5000,\n  }),\n})\n\nexport { useOctowatchApi };\n","import {atom} from 'recoil';\n\nconst serverState = atom<{ status: 'OK' | 'UNKNOWN', buildName: string }>({\n  key: 'octowatch.ml/server/status',\n  default: {\n    status: 'UNKNOWN',\n    buildName: '(알 수 없음)'\n  },\n});\n\nconst dashboardState = atom<{\n  commits: {\n    times: string[],\n    counts: number[],\n  },\n  issues: {\n    times: string[],\n    counts: number[],\n  },\n  prs: {\n    times: string[],\n    counts: number[],\n  },\n  recents: [{\n    _id: string,\n    repository: string,\n    event_entity: string,\n    event_type: string,\n    payload: any,\n    created_at: string,\n  }?],\n}>({\n  key: 'octowatch.ml/dashboard/realtime-status',\n  default: {\n    commits: {\n      times: ['2021-02-01T00:00:00.000Z', '2021-02-01T01:00:00.000Z', '2021-02-01T02:00:00.000Z'],\n      counts: [0, 0, 0]\n    },\n    issues: {\n      times: ['2021-02-01T00:00:00.000Z', '2021-02-01T01:00:00.000Z', '2021-02-01T02:00:00.000Z'],\n      counts: [0, 0, 0]\n    },\n    prs: {\n      times: ['2021-02-01T00:00:00.000Z', '2021-02-01T01:00:00.000Z', '2021-02-01T02:00:00.000Z'],\n      counts: [0, 0, 0]\n    },\n    recents: [],\n  }\n});\n\nconst repoListState = atom<[{\n  repository: string,\n  recent: string,\n}?]>({\n  key: 'octowatch.ml/dashboard/repo-list',\n  default: []\n});\n\nconst repoDashboardState = atom<{\n  commits: {\n    times: string[],\n    counts: number[],\n  },\n  issues: {\n    times: string[],\n    counts: number[],\n  },\n  prs: {\n    times: string[],\n    counts: number[],\n  },\n  distributions: {\n    commits: any,\n    issues: any,\n    prs: any,\n  },\n  community: {\n    health_percentage: any,\n    description: any,\n    documentation: any,\n    code_of_conduct: any,\n    contributing: any,\n    issue_template: any,\n    pull_request_template: any,\n    license: any,\n    readme: any,\n  },\n  recents: [{\n    _id: string,\n    repository: string,\n    event_entity: string,\n    event_type: string,\n    payload: any,\n    created_at: string,\n  }?],\n}>({\n  key: 'octowatch.ml/dashboard/repo/detail',\n  default: {\n    commits: {\n      times: ['2021-02-01T00:00:00.000Z', '2021-02-01T01:00:00.000Z', '2021-02-01T02:00:00.000Z'],\n      counts: [0, 0, 0]\n    },\n    issues: {\n      times: ['2021-02-01T00:00:00.000Z', '2021-02-01T01:00:00.000Z', '2021-02-01T02:00:00.000Z'],\n      counts: [0, 0, 0]\n    },\n    prs: {\n      times: ['2021-02-01T00:00:00.000Z', '2021-02-01T01:00:00.000Z', '2021-02-01T02:00:00.000Z'],\n      counts: [0, 0, 0]\n    },\n    distributions: {\n      commits: {},\n      issues: {},\n      prs: {},\n    },\n    community: {\n      health_percentage: null,\n      description: null,\n      documentation: null,\n      code_of_conduct: null,\n      contributing: null,\n      issue_template: null,\n      pull_request_template: null,\n      license: null,\n      readme: null,\n    },\n    recents: [],\n  }\n});\n\nexport {serverState, dashboardState, repoListState, repoDashboardState};\n","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\n\nimport OWGithubListCell from 'components/ow_github_list_cell';\nimport {useOctowatchApi} from '../api/octowatch-api';\nimport {useRecoilState} from 'recoil';\nimport {repoListState} from '../state/octowatch-state-store';\n\nconst Container = styled.div`\n  background: #F9F9F9;\n  border-radius: 25px;\n  padding: 25px 30px;\n  overflow-y: auto;\n  height: calc(100% - 70px);\n`;\n\nconst Title = styled.div`\n  font-size: 20px;\n  margin-top: 15px;\n  margin-bottom: 30px;\n`;\n\nconst OWGithubList: React.FC = () => {\n  const [{data, loading}, refetch] = useOctowatchApi('/repo');\n  const [repoListStatus, setRepoListStatus] = useRecoilState(repoListState);\n\n  useEffect(() => {\n    setInterval(() => {\n      refetch();\n    }, 5000);\n  }, []);\n\n  useEffect(() => {\n    if (!loading && data) {\n      setRepoListStatus(data);\n    }\n  });\n\n  return <>\n    <Container>\n      <Title>등록된 Github 저장소</Title>\n\n      { repoListStatus.map((repo) =>\n        <OWGithubListCell repoName={repo!!.repository}\n                          recent={repo!!.recent} />\n      )}\n    </Container>\n  </>;\n};\n\nexport default OWGithubList;","import React, {ReactNode} from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  height: 100%;\n  min-height: 100vh;\n`;\n\nconst Body = styled.div`\n  display: block;\n  width: calc(100% - 510px);\n  flex: 1;\n  height: 100%;\n  min-height: 100vh;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 510px;\n`;\n\nconst Sidebar = styled.div`\n  width: 510px;\n  height: calc(100% - 30px);\n  position: fixed;\n  padding: 1.5rem;\n  right: 0;\n  overflow: hidden;\n`;\n\nconst OWMainContainer: React.FC<{\n  body: ReactNode,\n  sidebar: ReactNode\n}> = ({body, sidebar}) => {\n  return <>\n    <Container>\n      <Body>\n        {body}\n      </Body>\n      <Sidebar>\n        {sidebar}\n      </Sidebar>\n    </Container>\n  </>;\n};\n\nexport default OWMainContainer;","import styled from 'styled-components';\nimport React from 'react';\n\nconst Label = styled.p`\n  font-size: 30px;\n  margin: 0;\n`;\n\nconst OWBigTitle: React.FC<{label: string}> = ({label}) => {\n  return <>\n    <Label>{label}</Label>\n  </>;\n}\n\nexport default OWBigTitle;\n","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport {useCountUp} from 'react-countup';\n\nconst NumberValue = styled.p<{isPercent: boolean}>`\n  font-family: 'JetBrains Mono', monospace;\n  font-size: ${(props) => props.isPercent ? '45px' : '65px'};\n  font-weight: bold;\n  display: inline-block;\n  margin: 15px 0 0;\n  z-index: 999999;\n  position: relative;\n  text-align: ${(props) => props.isPercent ? 'center' : 'left'};\n  min-width: 170px;\n`;\n\nconst OWAnimatedNumber: React.FC<{ value: number, isPercent?: boolean }> = ({value, isPercent = false}) => {\n  const {countUp, start, update} = useCountUp({\n    start: 0,\n    end: value,\n    delay: 1000,\n    duration: 2.5,\n  });\n\n  useEffect(() => {\n    start();\n  }, []);\n\n  useEffect(() => {\n    update(value);\n  }, [value]);\n\n  return <>\n    <NumberValue isPercent={isPercent}>{String(countUp).replace(/(.)(?=(\\d{3})+$)/g, '$1,')}{isPercent ? '%' : ''}</NumberValue>\n  </>;\n}\n\nexport default OWAnimatedNumber;\n","import styled from 'styled-components';\nimport React from 'react';\n\nconst Label = styled.p`\n  font-size: 18px;\n  margin: 0;\n`;\n\nconst OWSmallTitle: React.FC<{label: string}> = ({label}) => {\n  return <>\n    <Label>{label}</Label>\n  </>;\n}\n\nexport default OWSmallTitle;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Chart from 'react-apexcharts';\nimport OWAnimatedNumber from 'components/ow_animated_number';\nimport OWSmallTitle from 'components/ow_small_title';\n\nconst Container = styled.div`\n  padding-top: 20px;\n  padding-bottom: 20px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst InformationContainer = styled.div`\n  min-width: 100px;\n  max-width: 100px;\n`;\n\nconst ChartContainer = styled.div`\n  flex-grow: 1;\n`;\n\nconst OWGraph: React.FC<{\n  title: string,\n  value: number,\n  color: string,\n  xAxisValue: number[],\n  yAxisCategory: string[],\n}> = ({\n        title,\n        value,\n        color,\n        xAxisValue,\n        yAxisCategory,\n      }) => {\n\n  return <>\n    <Container>\n      <InformationContainer>\n        <OWSmallTitle label={title}/>\n        <OWAnimatedNumber value={value}/>\n      </InformationContainer>\n      <ChartContainer>\n        <Chart options={{\n          dataLabels: {\n            enabled: false\n          },\n          chart: {\n            toolbar: {\n              show: false,\n            },\n          },\n          stroke: {\n            curve: 'smooth'\n          },\n          colors: [color],\n          xaxis: {\n            type: 'datetime',\n            categories: yAxisCategory,\n          },\n          yaxis: {\n            show: false,\n          },\n          legend: {\n            show: false,\n          },\n          grid: {\n            show: false,\n          },\n          tooltip: {\n            x: {\n              format: 'MM월 dd일 HH:mm'\n            },\n          },\n        }} series={[{\n          name: title,\n          data: xAxisValue,\n        }]} type=\"area\"\n               height={200}/>\n      </ChartContainer>\n    </Container>\n  </>;\n};\n\nexport default OWGraph;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Divider = styled.div`\n  height: 0.5px;\n  background: #000;\n  opacity: 0.1;\n`;\n\nconst OWDivider: React.FC = () => {\n  return <>\n    <Divider />\n  </>;\n}\n\nexport default OWDivider;\n","import React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport ClosedPrIcon from 'images/event_closed_pr.svg';\nimport MergedPrIcon from 'images/event_merged_pr.svg';\nimport OpenedPrIcon from 'images/event_created_pr.svg';\nimport CommentedIcon from 'images/event_commented.svg';\nimport IssueOpenedIcon from 'images/exclamation.svg';\nimport GeneralIcon from 'images/event_general.svg';\nimport dayjs from 'dayjs';\n\nconst eventIconTypes = {\n  closedPr: ClosedPrIcon,\n  mergedPr: MergedPrIcon,\n  openedPr: OpenedPrIcon,\n  commented: CommentedIcon,\n  openedIssue: IssueOpenedIcon,\n  unknown: GeneralIcon,\n};\n\nconst Container = styled.div`\n  padding: 0 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`;\n\nconst InformationContainer = styled.div`\n  margin-left: 20px;\n`;\n\nconst Icon = styled.img`\n  width: 24px;\n  height: 24px;\n`;\n\nconst Title = styled.p`\n  font-family: \"JetBrains Mono\", \"NEXON Lv2 Gothic\", sans-serif;\n  margin: 0 0 4px;\n`;\n\nconst Description = styled.p`\n  font-family: 'D2Coding', monospace;\n  margin: 0;\n  opacity: 0.5;\n`;\n\ninterface TitleTemplateProps {\n  repository: string;\n  branchName: string;\n  userName: string;\n  issueNumber: number;\n  reviewerName: string;\n  commitCount: number;\n  committer: string;\n}\n\ninterface DescriptionTemplateProps {\n  createdAt: string;\n  userName: string;\n  issueNumber: number;\n  issueTitle: number;\n  comment: number;\n}\n\nconst titleTemplates: { [entity: string]: { [type: string]: (props: TitleTemplateProps) => string } } = {\n  ping: {\n    ping: ({repository}) => `OctoWatch 시스템에 ${repository} 가 등록됐습니다.`,\n  },\n  branch: {\n    create: ({repository, branchName}) => `${repository} 에 ${branchName} 브랜치가 추가됐습니다.`,\n    delete: ({repository, branchName}) => `${repository} 에 ${branchName} 브랜치가 삭제됐습니다.`,\n  },\n  issue: {\n    opened: ({userName, repository}) => `${userName} 님이 ${repository} 에 새로운 이슈를 등록했습니다.`,\n    comment: ({userName, repository, issueNumber}) => `${userName} 님이 ${repository} 의 #${issueNumber} 이슈에 댓글을 달았습니다.`,\n    closed: ({repository, issueNumber}) => `${repository} 의 #${issueNumber} 이슈가 닫혔습니다.`,\n  },\n  pr: {\n    closed: ({repository, issueNumber}) => `${repository} 의 #${issueNumber} PR 이 닫혔습니다.`,\n    opened: ({userName, repository}) => `${userName} 님이 ${repository} 에 PR 을 생성했습니다.`,\n    merged: ({userName, repository, issueNumber}) => `${repository} 에 ${userName} 님의 #${issueNumber} PR 이 머지됐습니다.`,\n    comment: ({userName, repository}) => `${userName} 님이 ${repository} 에 PR 에 댓글을 달았습니다.`,\n    review: ({userName, reviewerName, repository}) => `${userName} 님이 ${reviewerName} 님에게 ${repository} PR 리뷰를 요청했습니다.`,\n  },\n  commit: {\n    push: ({commitCount, committer, repository, branchName}) => {\n      if (commitCount > 0) {\n        return `${committer} 님이 ${repository} 에 ${commitCount}개의 커밋을 추가했습니다.`;\n      }\n\n      return `${repository} 에 ${branchName} 브랜치가 머지됐습니다.`;\n    }\n  }\n};\n\nconst descriptionTemplates: { [entity: string]: { [type: string]: (props: DescriptionTemplateProps) => string } } = {\n  ping: {\n    ping: ({createdAt}) => `${dayjs(createdAt).add(9, 'hours').fromNow()}`,\n  },\n  branch: {\n    create: ({createdAt}) => `${dayjs(createdAt).add(9, 'hours').fromNow()}`,\n    delete: ({createdAt}) => `${dayjs(createdAt).add(9, 'hours').fromNow()}`,\n  },\n  issue: {\n    opened: ({\n               createdAt,\n               userName,\n               issueNumber,\n               issueTitle\n             }) => `${dayjs(createdAt).fromNow()} → #${issueNumber} ${issueTitle} by @${userName}`,\n    comment: ({createdAt, userName, comment}) => `${dayjs(createdAt).fromNow()} → “${comment}” by @${userName}`,\n    closed: ({\n               createdAt,\n               userName,\n               issueNumber,\n               issueTitle\n             }) => `${dayjs(createdAt).add(9, 'hours').fromNow()} → #${issueNumber} ${issueTitle} by @${userName}`,\n  },\n  pr: {\n    closed: ({\n               createdAt,\n               issueNumber,\n               issueTitle,\n               userName\n             }) => `${dayjs(createdAt).add(9, 'hours').fromNow()} → #${issueNumber} ${issueTitle} by @${userName}`,\n    opened: ({\n               createdAt,\n               issueNumber,\n               issueTitle,\n               userName\n             }) => `${dayjs(createdAt).add(9, 'hours').fromNow()} → #${issueNumber} ${issueTitle} by @${userName}`,\n    comment: ({createdAt, userName, comment}) => `${dayjs(createdAt).fromNow()} → “${comment}” by @${userName}`,\n    review: ({\n               createdAt,\n               issueNumber,\n               issueTitle,\n               userName\n             }) => `${dayjs(createdAt).add(9, 'hours').fromNow()} → #${issueNumber} ${issueTitle} by @${userName}`,\n    merged: ({\n               createdAt,\n               issueNumber,\n               issueTitle,\n               userName\n             }) => `${dayjs(createdAt).add(9, 'hours').fromNow()} → #${issueNumber} ${issueTitle} by @${userName}`,\n  },\n  commit: {\n    push: ({createdAt}) => {\n\n      return `${dayjs(createdAt).add(9, 'hours').fromNow()}`;\n    }\n  }\n};\n\nconst OWLog: React.FC<{\n  repository: string,\n  event_entity: string,\n  event_type: string,\n  payload: any,\n  created_at: string,\n}> = ({\n        repository,\n        event_entity,\n        event_type,\n        payload,\n        created_at,\n      }) => {\n  const title = useMemo(() => {\n    const entityTemplates = titleTemplates[event_entity];\n\n    if (entityTemplates) {\n      const template = entityTemplates[event_type];\n      return !!template ? template({\n        repository,\n        branchName: payload.branch_name?.replaceAll('refs/heads/', '') ?? '',\n        userName: (payload.issue || payload.pr)?.user?.login ?? '',\n        issueNumber: (payload.issue || payload.pr)?.number ?? '',\n        reviewerName: payload.review?.user?.login ?? '',\n        commitCount: payload?.commits?.length ?? 0,\n        committer: payload?.pusher?.name ?? ''\n      }) : '알 수 없음';\n    } else {\n\n      return '알 수 없음';\n    }\n  }, [repository, event_entity, event_type, payload]);\n\n  const description = useMemo(() => {\n    const entityTemplates = descriptionTemplates[event_entity];\n\n    if (entityTemplates) {\n      const template = entityTemplates[event_type];\n      return !!template ? template({\n        createdAt: created_at,\n        userName: (payload.issue || payload.pr || payload.comment || payload.review)?.user?.login ?? '',\n        issueNumber: (payload.issue || payload.pr)?.number ?? '',\n        issueTitle: (payload.issue || payload.pr)?.title ?? '',\n        comment: (payload.comment)?.body ?? '',\n      }) : '알 수 없음';\n    } else {\n\n      return '알 수 없음';\n    }\n  }, [repository, event_entity, event_type, payload]);\n\n  const iconTypesSrc = useMemo(() => {\n    if (event_type === 'comment') {\n      return eventIconTypes['commented'];\n    } else if (event_entity === 'pr' && event_type === 'opened') {\n      return eventIconTypes['openedPr'];\n    } else if (event_entity === 'pr' && event_type === 'closed') {\n      return eventIconTypes['closedPr'];\n    } else if (event_entity === 'commit' && event_type === 'push' && payload.commits.length === 0) {\n      return eventIconTypes['mergedPr'];\n    } else if (event_entity === 'pr' && event_type === 'merged') {\n      return eventIconTypes['mergedPr'];\n    } else if (event_entity === 'issue' && (event_type === 'opened' || event_type === 'closed')) {\n      return eventIconTypes['openedIssue'];\n    }\n\n    return eventIconTypes['unknown'];\n  }, [event_entity, event_type]);\n\n  return <>\n    <Container>\n      <Icon src={iconTypesSrc}/>\n      <InformationContainer>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n      </InformationContainer>\n    </Container>\n  </>;\n};\n\nexport default OWLog;\n","export default __webpack_public_path__ + \"static/media/event_closed_pr.0e58dc7c.svg\";","export default __webpack_public_path__ + \"static/media/event_merged_pr.a471dd74.svg\";","export default __webpack_public_path__ + \"static/media/event_created_pr.fb8b30bd.svg\";","export default __webpack_public_path__ + \"static/media/event_commented.4aeaaeb5.svg\";","export default __webpack_public_path__ + \"static/media/exclamation.175963bb.svg\";","export default __webpack_public_path__ + \"static/media/event_general.9aba6d9e.svg\";","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport {useRecoilState} from 'recoil';\nimport OWBigTitle from 'components/ow_big_title';\nimport OWGraph from 'components/ow_graph';\nimport OWDivider from 'components/ow_divider';\nimport OWSmallTitle from 'components/ow_small_title';\nimport OWLog from 'components/ow_log';\nimport {useOctowatchApi} from 'api/octowatch-api';\nimport {dashboardState} from 'state/octowatch-state-store';\n\nconst Container = styled.div`\n  margin-left: 60px;\n  margin-right: 60px;\n`;\n\nconst TwoRowContainer = styled.div`\n  display: flex;\n`;\n\nconst TwoContainer = styled.div`\n  flex: 1;\n\n  &:nth-child(1) {\n    margin-right: 10px;\n  }\n\n  &:nth-child(2) {\n    margin-left: 10px;\n  }\n`;\n\nconst MainDashboard: React.FC = () => {\n  const [{data, loading}, refetch] = useOctowatchApi('/dashboard');\n  const [dashboardStatus, setDashboardStatus] = useRecoilState(dashboardState);\n\n  useEffect(() => {\n    setInterval(() => {\n      refetch();\n    }, 5000);\n  }, []);\n\n  useEffect(() => {\n    if (!loading && data) {\n      setDashboardStatus({\n        commits: data.commits,\n        issues: data.issues,\n        prs: data.prs,\n        recents: data.recents,\n      });\n    }\n  }, [loading]);\n\n  return <>\n    <Container>\n      <OWBigTitle label=\"실시간 대시보드\"/>\n      <div style={{marginBottom: '20px'}}/>\n      <OWGraph title=\"전체 커밋 수\"\n               value={dashboardStatus.commits.counts[dashboardStatus.commits.counts.length - 1]}\n               xAxisValue={dashboardStatus.commits.counts}\n               yAxisCategory={dashboardStatus.commits.times}\n               color=\"#5784ba\"/>\n      <OWDivider/>\n\n      <TwoRowContainer>\n        <TwoContainer>\n          <OWGraph title=\"전체 이슈 수\"\n                   value={dashboardStatus.issues.counts[dashboardStatus.issues.counts.length - 1]}\n                   xAxisValue={dashboardStatus.issues.counts}\n                   yAxisCategory={dashboardStatus.issues.times}\n                   color=\"#B6D8F2\"/>\n        </TwoContainer>\n        <TwoContainer>\n          <OWGraph title=\"전체 PR 수\"\n                   value={dashboardStatus.prs.counts[dashboardStatus.prs.counts.length - 1]}\n                   xAxisValue={dashboardStatus.prs.counts}\n                   yAxisCategory={dashboardStatus.prs.times}\n                   color=\"#F4CFDF\"/>\n        </TwoContainer>\n      </TwoRowContainer>\n\n      <OWDivider/>\n\n      <div style={{height: '60px'}}/>\n      <OWSmallTitle label=\"실시간 이벤트\"/>\n      <div style={{height: '30px'}}/>\n\n      {dashboardStatus.recents.map((recent, index) =>\n        <OWLog key={index} {...recent!!}/>\n      )}\n\n      <div style={{height: '120px'}}/>\n    </Container>\n  </>;\n};\n\nexport default MainDashboard;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  padding: 5px 0;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nconst RepoIcon = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nconst RepoName = styled.p`\n  font-family: 'JetBrains Mono', monospace;\n  font-size: 18px;\n  margin: 0 0 0 15px;\n`;\n\nfunction publicProfile(repoName: string): string {\n  return `https://avatars.githubusercontent.com/${repoName.split('/')[0]}`;\n}\n\nconst OWRepoHeader: React.FC<{ repoName: string }> = ({repoName}) => {\n  return <>\n    <Container>\n      <RepoIcon src={publicProfile(atob(repoName))}/>\n      <RepoName>{atob(repoName)}</RepoName>\n    </Container>\n  </>;\n};\n\nexport default OWRepoHeader;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Chart from 'react-apexcharts';\nimport OWSmallTitle from 'components/ow_small_title';\n\nconst Container = styled.div`\n  padding-top: 60px;\n  padding-bottom: 60px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n`;\n\nconst ChartContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst OWPieGraph: React.FC<{\n  title: string,\n  shortTitle: string,\n  values: number[],\n  labels: string[],\n  colors: string[] | undefined,\n}> = ({\n        title,\n        shortTitle,\n        values,\n        labels,\n        colors\n      }) => {\n\n  return <>\n    <Container>\n      {title.length > 0 && <OWSmallTitle label={title}/>}\n      <ChartContainer>\n        <Chart options={{\n          labels: labels,\n          dataLabels: {\n            enabled: false\n          },\n          colors: colors,\n          plotOptions: {\n            pie: {\n              donut: {\n                labels: {\n                  show: shortTitle.length > 0,\n                  name: {\n                    show: shortTitle.length > 0,\n                  },\n                  value: {\n                    show: shortTitle.length > 0,\n                  },\n                  total: {\n                    show: shortTitle.length > 0,\n                    label: shortTitle,\n                    color: '#000'\n                  }\n                }\n              }\n            }\n          },\n          legend: {\n            show: false,\n          },\n          grid: {\n            show: false,\n          },\n        }} series={values} type=\"donut\"\n               width={350}/>\n      </ChartContainer>\n    </Container>\n  </>;\n};\n\nexport default OWPieGraph;","import React from 'react';\nimport CompleteIcon from 'images/repository_health_completed.svg';\nimport RecommendIcon from 'images/repository_health_recommended.svg';\nimport RequiredIcon from 'images/repository_health_required.svg';\nimport styled from 'styled-components';\n\nconst iconTypes = {\n  complete: CompleteIcon,\n  recommend: RecommendIcon,\n  required: RequiredIcon,\n};\n\nconst Icon = styled.img`\n  width: 32px;\n  height: 32px;\n  margin-right: 12px;\n`;\n\nconst Text = styled.p`\n  margin: 0;\n  font-size: 18px;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nfunction getSuffixText(type: string): string {\n  if (type === 'recommend') {\n    return '(권장)';\n  } else if (type === 'required') {\n    return '(필수)';\n  } else {\n    return '';\n  }\n}\n\nconst OWRepositoryHealthCell: React.FC<{\n  type: 'recommend' | 'required',\n  label: string,\n  isCompleted: boolean,\n}> = ({\n        type,\n        label,\n        isCompleted,\n      }) => {\n\n  return <>\n    <Container>\n      <Icon src={iconTypes[isCompleted ? 'complete' : type]}/>\n      <Text>{label} {getSuffixText(type)}</Text>\n    </Container>\n  </>;\n};\n\nexport default OWRepositoryHealthCell;\n","export default __webpack_public_path__ + \"static/media/repository_health_completed.b8606549.svg\";","export default __webpack_public_path__ + \"static/media/repository_health_recommended.7d66faa0.svg\";","export default __webpack_public_path__ + \"static/media/repository_health_required.f01e09c6.svg\";","import React, {useMemo} from 'react';\nimport styled from 'styled-components';\nimport OWSmallTitle from 'components/ow_small_title';\nimport OWPieGraph from 'components/ow_pie_graph';\nimport OWAnimatedNumber from 'components/ow_animated_number';\nimport OWRepositoryHealthCell from 'components/ow_repository_health_cell';\n\nconst Container = styled.div`\n  padding-top: 60px;\n  padding-bottom: 60px;\n  display: flex;\n  flex-direction: column;\n  align-items: start;\n`;\n\nconst InnerContainer = styled.div<{ disabled: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: start;\n  opacity: ${(props) => props.disabled ? '0.1' : '1'};\n  transition: all 0.3s;\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  row-gap: 8px;\n  margin-top: 75px;\n  margin-left: 50px;\n`;\n\nconst OWRepositoryHealth: React.FC<{\n  isUnknown: boolean,\n  community: {\n    health_percentage: any,\n    description: any,\n    documentation: any,\n    code_of_conduct: any,\n    contributing: any,\n    issue_template: any,\n    pull_request_template: any,\n    license: any,\n    readme: any,\n  },\n}> = ({isUnknown, community,}) => {\n  const titleLabel = useMemo<string>(() => {\n    if (isUnknown) {\n      return '저장소 체크 상황 (비공개 저장소 산출 불가)';\n    }\n\n    return '저장소 체크 상황';\n  }, [isUnknown]);\n\n  const graphValues = useMemo<number[]>(() => {\n    let completedCount = Object.values(community).filter((c) => !!c).length\n    let misCompletedCount = Object.values(community).length - completedCount;\n\n    console.log(misCompletedCount);\n\n    return [completedCount, misCompletedCount];\n  }, [community]);\n\n  return <>\n    <Container>\n      <OWSmallTitle label={titleLabel}/>\n      <InnerContainer disabled={isUnknown}>\n        <div>\n          <OWPieGraph title=\"\"\n                      values={graphValues}\n                      labels={['완료', '미완료']}\n                      shortTitle=\"\"\n                      colors={['#2196F3', '#E79E2D']}/>\n          <div style={{zIndex: 999, position: 'relative', left: '91px', top: '-265px'}}>\n            <OWAnimatedNumber value={community.health_percentage > 0 ? community.health_percentage : 0} isPercent={true}/>\n          </div>\n        </div>\n        <ListContainer>\n          <OWRepositoryHealthCell\n            isCompleted={community.health_percentage !== -1 && community.health_percentage !== null} type=\"required\"\n            label=\"저장소 설명\"/>\n          <OWRepositoryHealthCell isCompleted={!!community.readme} type=\"required\" label=\"README.md\"/>\n          <OWRepositoryHealthCell isCompleted={!!community.license} type=\"required\" label=\"프로젝트의 라이선스\"/>\n          <OWRepositoryHealthCell isCompleted={!!community.code_of_conduct} type=\"recommend\"\n                                  label=\"Code of Conduct \"/>\n          <OWRepositoryHealthCell isCompleted={!!community.contributing} type=\"recommend\"\n                                  label=\"Contribution \"/>\n          <OWRepositoryHealthCell isCompleted={!!community.issue_template} type=\"recommend\"\n                                  label=\"Issue 템플릿 \"/>\n          <OWRepositoryHealthCell isCompleted={!!community.pull_request_template} type=\"recommend\"\n                                  label=\"Pull Request 템플릿\"/>\n        </ListContainer>\n      </InnerContainer>\n    </Container>\n  </>;\n};\n\nexport default OWRepositoryHealth;\n","import React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport OWBigTitle from 'components/ow_big_title';\n\nimport {useParams} from 'react-router-dom';\nimport OWRepoHeader from 'components/ow_repo_header';\nimport OWAnimatedNumber from 'components/ow_animated_number';\nimport OWGraph from 'components/ow_graph';\nimport OWDivider from 'components/ow_divider';\nimport OWPieGraph from 'components/ow_pie_graph';\nimport OWRepositoryHealth from 'components/ow_repository_health';\nimport OWSmallTitle from 'components/ow_small_title';\nimport OWLog from 'components/ow_log';\nimport {useOctowatchApi} from 'api/octowatch-api';\nimport {useRecoilState} from 'recoil';\nimport {repoDashboardState} from 'state/octowatch-state-store';\nimport { useMemo } from 'react';\n\nconst Container = styled.div`\n  margin-left: 60px;\n  margin-right: 60px;\n`;\n\nconst TitleContainer = styled.div`\n  display: flex;\n  align-items: start;\n`;\n\nconst ScoreContainer = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: flex-start;\n  margin-left: auto;\n`;\n\nconst ScoreDimenText = styled.p`\n  display: inline-block;\n  font-size: 36px;\n  margin: 0;\n`;\n\nconst RowContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst TwoContainer = styled.div`\n  flex: 1;\n\n  &:nth-child(1) {\n    margin-right: 10px;\n  }\n\n  &:nth-child(2) {\n    margin-left: 10px;\n  }\n`;\n\nconst ThreeContainer = styled.div`\n  flex: 1;\n\n  &:nth-child(1) {\n    margin-right: 10px;\n  }\n\n  &:nth-child(2) {\n    margin-right: 10px;\n    margin-left: 10px;\n  }\n\n  &:nth-child(3) {\n    margin-left: 10px;\n  }\n`;\n\nconst RepoDashboard: React.FC = () => {\n  let {repoName} = useParams<{ repoName: string }>();\n\n  const [{data, loading}, refetch] = useOctowatchApi(`/repo/${atob(repoName)}`);\n  const [dashboardStatus, setDashboardStatus] = useRecoilState(repoDashboardState);\n\n  useEffect(() => {\n    setInterval(() => {\n      refetch();\n    }, 5000);\n  }, []);\n\n  useEffect(() => {\n    if (!loading && data) {\n      setDashboardStatus({\n        ...data\n      });\n    }\n  }, [loading]);\n\n  const score = useMemo<number>(() => {\n    const commitScoreSet = 10;\n    const issueScoreSet = 30;\n    const prScoreSet = 50;\n\n    let score = 0;\n\n    score += dashboardStatus.commits.counts[dashboardStatus.commits.counts.length - 1] * commitScoreSet;\n    score += dashboardStatus.issues.counts[dashboardStatus.issues.counts.length - 1] * issueScoreSet;\n    score += dashboardStatus.prs.counts[dashboardStatus.prs.counts.length - 1] * prScoreSet;\n\n    score += !!dashboardStatus.community.readme ? 50 : 0;\n    score += !!dashboardStatus.community.description ? 50 : 0;\n    score += !!dashboardStatus.community.license ? 50 : 0;\n    score += !!dashboardStatus.community.code_of_conduct ? 150 : 0;\n    score += !!dashboardStatus.community.contributing ? 150 : 0;\n    score += !!dashboardStatus.community.issue_template ? 100 : 0;\n    score += !!dashboardStatus.community.pull_request_template ? 100 : 0;\n\n    return score;\n  }, [dashboardStatus]);\n\n  return <>\n    <Container>\n      <TitleContainer>\n        <div>\n          <OWBigTitle label=\"실시간 대시보드\"/>\n          <OWRepoHeader repoName={repoName}/>\n        </div>\n        <ScoreContainer>\n          <OWAnimatedNumber value={score}/>\n          <ScoreDimenText>&nbsp;점</ScoreDimenText>\n        </ScoreContainer>\n      </TitleContainer>\n      <div style={{marginBottom: '20px'}}/>\n      <OWGraph title=\"전체 커밋 수\"\n               value={dashboardStatus.commits.counts[dashboardStatus.commits.counts.length - 1]}\n               xAxisValue={dashboardStatus.commits.counts}\n               yAxisCategory={dashboardStatus.commits.times}\n               color=\"#5784ba\"/>\n      <OWDivider/>\n\n      <RowContainer>\n        <TwoContainer>\n          <OWGraph title=\"전체 이슈 수\"\n                   value={dashboardStatus.issues.counts[dashboardStatus.issues.counts.length - 1]}\n                   xAxisValue={dashboardStatus.issues.counts}\n                   yAxisCategory={dashboardStatus.issues.times}\n                   color=\"#B6D8F2\"/>\n        </TwoContainer>\n        <TwoContainer>\n          <OWGraph title=\"전체 PR 수\"\n                   value={dashboardStatus.prs.counts[dashboardStatus.prs.counts.length - 1]}\n                   xAxisValue={dashboardStatus.prs.counts}\n                   yAxisCategory={dashboardStatus.prs.times}\n                   color=\"#F4CFDF\"/>\n        </TwoContainer>\n      </RowContainer>\n      <OWDivider/>\n      <RowContainer>\n        <ThreeContainer>\n          <OWPieGraph title=\"유저별 Commit 분포\"\n                      values={Object.values(dashboardStatus.distributions.commits).length > 0 ? Object.values(dashboardStatus.distributions.commits) : [0]}\n                      labels={Object.keys(dashboardStatus.distributions.commits).length > 0 ? Object.keys(dashboardStatus.distributions.commits) : ['없음']}\n                      shortTitle=\"Commit 수\"\n                      colors={undefined}/>\n        </ThreeContainer>\n        <ThreeContainer>\n          <OWPieGraph title=\"유저별 Pull Request 분포\"\n                      values={Object.values(dashboardStatus.distributions.prs).length > 0 ? Object.values(dashboardStatus.distributions.prs) : [0]}\n                      labels={Object.keys(dashboardStatus.distributions.prs).length > 0 ? Object.keys(dashboardStatus.distributions.prs) : ['없음']}\n                      shortTitle=\"PR 수\"\n                      colors={undefined}/>\n        </ThreeContainer>\n        <ThreeContainer>\n          <OWPieGraph title=\"유저별 Issue 분포\"\n                      values={Object.values(dashboardStatus.distributions.issues).length > 0 ? Object.values(dashboardStatus.distributions.issues) : [0]}\n                      labels={Object.keys(dashboardStatus.distributions.issues).length > 0 ? Object.keys(dashboardStatus.distributions.issues) : ['없음']}\n                      shortTitle=\"Issue 수\"\n                      colors={undefined}/>\n        </ThreeContainer>\n      </RowContainer>\n      <OWDivider/>\n      <OWRepositoryHealth community={dashboardStatus.community}\n                          isUnknown={dashboardStatus.community.health_percentage === -1}/>\n\n      <div style={{marginTop: '-120px'}}>\n        <OWDivider/>\n\n        <div style={{height: '60px'}}/>\n        <OWSmallTitle label=\"실시간 이벤트\"/>\n        <div style={{height: '30px'}}/>\n\n        {dashboardStatus.recents.map((recent, index) =>\n          <OWLog key={index} {...recent!!}/>\n        )}\n\n        <div style={{height: '120px'}}/>\n      </div>\n    </Container>\n  </>;\n};\n\nexport default RepoDashboard;\n","import React, {useEffect} from 'react';\nimport OWHeader from 'components/ow_header';\nimport OWGithubList from 'components/ow_github_list';\nimport OWMainContainer from 'components/ow_main_container';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport MainDashboard from 'pages/main_dashboard';\nimport RepoDashboard from 'pages/repo_dashboard';\nimport {serverState} from 'state/octowatch-state-store';\nimport {useOctowatchApi} from 'api/octowatch-api';\nimport {useRecoilState} from 'recoil';\n\nconst Dashboard: React.FC = () => {\n  const [{data, loading, error}, refetch] = useOctowatchApi('')\n  const [serverStatus, setServerState] = useRecoilState(serverState);\n\n  useEffect(() => {\n    setInterval(() => {\n      refetch();\n    }, 5000);\n  }, []);\n\n  useEffect(() => {\n    if (!loading && data) {\n      setServerState({status: data.status, buildName: data.build_name})\n    } else if (error) {\n      setServerState({status: 'UNKNOWN', buildName: 'UNKNOWN'})\n    }\n  }, [loading]);\n\n  return (\n    <OWMainContainer body={\n      <>\n        <OWHeader title={`Status : ${serverStatus.status !== 'UNKNOWN' ? 'Working' : 'Unknown'}\n          (v1.0.0_rev13b440fb4@${serverStatus.buildName})`}/>\n        <Switch>\n          <Route exact path=\"/\">\n            <MainDashboard/>\n          </Route>\n          <Route path=\"/detail/:repoName\">\n            <RepoDashboard/>\n          </Route>\n        </Switch>\n      </>\n    } sidebar={\n      <OWGithubList/>\n    }/>\n  );\n};\n\nexport default Dashboard;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Dashboard from 'pages/dashboard';\nimport reportWebVitals from 'reportWebVitals';\nimport { RecoilRoot } from 'recoil';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport relativeTime from 'dayjs/plugin/relativeTime';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\n\nimport 'index.css';\n\nimport 'dayjs/locale/ko';\nimport dayjs from 'dayjs';\n\n\ndayjs.extend(utc);\ndayjs.extend(timezone);\ndayjs.extend(relativeTime);\ndayjs.locale('ko');\n\ndayjs.tz.setDefault(\"Asia/Seoul\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <Router forceRefresh={true} basename=\"/octowatch\">\n        <Dashboard />\n      </Router>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}